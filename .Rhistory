prob_sup = 0.8
### SIMULATION OF A DATASET (WITHOUT Y)
simulate_dataset <- function(
N=100,#number of row in the dataset
n_variables=5,#number of variable to simulate
n_variables_num = 0 #number of numeric variable
)
{
# construction of variables
variables_list = list()
vect_proba = vector()
#Construction of numeric variables
if (n_variables_num > 0)
{
for (i in seq(n_variables_num))
{
variables_list[[i]] <- rnorm(N,mean = 0,1)
}
} else {
i = 1
}
# other variables
for (j in i:n_variables)
{
modalities <- 2 # number of modalities in each variable
proba <- runif(1) # generation of the binomial parameter 'proba' according to a uniform law
vect_proba[j] <- proba
variables_list[[j]] <- rbernoulli(N,proba) # generation of the values of the variable (the columns of the dataset)
}
DF <- matrix(nrow = N,ncol = n_variables)
for (ncol in seq(n_variables))
{
variables_list[[ncol]] -> DF[,ncol] # generation of the dataset by binding the columns of the variables
}
as.data.frame(DF) -> DF
reslt <- list()
DF -> reslt$DF
vect_proba -> reslt$probas
return(reslt)
}
# Meaningful variables
simulation1 <- simulate_dataset(100,5,0)
OR_vect = c(0.4,6,0.5,3,1.2)
coeffs_vect <- log(OR_vect)
intercept = 1
prob = 1
n = 1
y_var = vector()
while (prob < prob_inf || prob > prob_sup)
{
partial_equation = intercept
for (variable in seq(ncol(simulation1$DF)))
{
partial_equation <- partial_equation + ifelse(simulation1$DF[ ,variable],coeffs_vect[variable],0)
}
y <-  exp(partial_equation)/(1 + exp(partial_equation))
prob = mean(y)
(mean(prob_inf,prob_sup) - prob)*10*log(n + 1) -> coeff
intercept <- intercept + (coeff * abs(intercept))
cat(paste0("intercept = ",intercept))
n <-  n + 1
}
for (var in seq(y))
{
y_var[var] <- rbernoulli(1,y[var])
}
DF <- cbind(y_var, simulation1$DF)
DF
# Not meningful factors
simulate_dataset(100,3)$DF -> DF2
colnames(DF2) <- c("interact1","interact2","interact3")
#Bind all variables
cbind(DF,DF2) -> DF
DF %>% kable() %>%
kable_styling(fixed_thead = T,bootstrap_options = c("striped", "hover", "condensed")) %>% scroll_box(height = '200px')
rslt <- reglog(DF,"y_var")
library(autostats)
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
library(readxl)
DF <- as.data.frame(read_excel("../../CDD/Hassk47/DF.xlsx", na = c("NC","NA")))
colnames(DF)
for (i in 1:length(DF))
{
if (!(FALSE %in% (levels(as.factor(DF[ ,i])) == c("0","1"))))
{
as.factor(DF[ ,i]) -> DF[ ,i]
}
}
#####################
# Caractéristiques  #
#####################
#Caractéristiques de la population
table1::table1(~sexe+tabac+exogenose_chronique+IC_chronique+IRespi_chronique+IRenale_chronique+Crohn_RCH+MAI+cancer+HTA+diabete_2+atopie+DA...104+urticaire_chronique+asthme+polypose+widal+rhinoconjonctivite_chronique+troubles_dig_chroniques+oesophagite_eosino...111+age_premiere_reaction+age_diag,data = DF)
#Allergies
table1::table1(~allergie_principale+famille_allergie_principale+animal+chien...9+chat...10+poule+vache+lapin+autre,data = DF)
########################
#     Regression       #
########################
library(autostats)
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
library(autostats)
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
library(autostats)
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
library(autostats)
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
?names
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
DF$AA_aggravee
to_binary(DF$AA_aggravee)
autostats::tobinary(DF$AA_aggravee)
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
?reglog
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"),exit = "html'")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"),exit = "html")
devtools::load_all(".")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"),exit = "html")
autostats::reglog(DF,"AA_aggravee",explicatives = c("atopie","cofacteur"),keep=c("atopie","cofacteur"))
autostats::reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
devtools::load_all(".")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
DF <- as.data.frame(read_excel("../../CDD/Hassk47/DF.xlsx", na = c("NC","NA")))
for (i in 1:length(DF))
{
if (!(FALSE %in% (levels(as.factor(DF[ ,i])) == c("0","1"))))
{
as.factor(DF[ ,i]) -> DF[ ,i]
}
}
table1::table1(~sexe+tabac+exogenose_chronique+IC_chronique+IRespi_chronique+IRenale_chronique+Crohn_RCH+MAI+cancer+HTA+diabete_2+atopie+DA...106+urticaire_chronique+asthme+polypose+widal+rhinoconjonctivite_chronique+troubles_dig_chroniques+oesophagite_eosino...113+age_premiere_reaction+age_diag,data = DF)
library(autostats)
reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
library(autostats)
reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"), exit="html")
install.packages("flextable")
install.packages("flextable")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
DF <- as.data.frame(read_excel("../../CDD/Hassk47/DF.xlsx", na = c("NC","NA")))
for (i in 1:length(DF))
{
if (!(FALSE %in% (levels(as.factor(DF[ ,i])) == c("0","1"))))
{
as.factor(DF[ ,i]) -> DF[ ,i]
}
}
reg <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"), exit="html")
library(autostats)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
DF <- as.data.frame(read_excel("../../CDD/Hassk47/DF.xlsx", na = c("NC","NA")))
for (i in 1:length(DF))
{
if (!(FALSE %in% (levels(as.factor(DF[ ,i])) == c("0","1"))))
{
as.factor(DF[ ,i]) -> DF[ ,i]
}
}
library(autostats)
reg <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"),exit="html")
detach("package:autostats", unload = TRUE)
remove.packages("autostats")
library(autostats)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
DF <- as.data.frame(read_excel("../../CDD/Hassk47/DF.xlsx", na = c("NC","NA")))
for (i in 1:length(DF))
{
if (!(FALSE %in% (levels(as.factor(DF[ ,i])) == c("0","1"))))
{
as.factor(DF[ ,i]) -> DF[ ,i]
}
}
reg <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"),exit="html")
library(flextable)
library(autostats)
reg <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"),exit="html")
flextable(reg)
reg <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
flextable(reg)
flextable(as.data.frame(reg))
usethis::use_package("flextable")
flextable(as.data.frame(reg),col_keys = c("variables","OR","IC","pval","OR","IC","pval"))
flextable(as.data.frame(reg),col_keys = c("variables","OR univariate","IC univariate","pval univariate","OR multivariate","IC multivariate","pval multivariate"))
tab <- flextable(as.data.frame(reg),col_keys = c("variables","OR univariate","IC univariate","pval univariate","OR multivariate","IC multivariate","pval multivariate"))
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- flextable(as.data.frame(rslt),col_keys = c("variables","OR univariate","IC univariate","pval univariate","OR multivariate","IC multivariate","pval multivariate"))
tab <- delete_part(rslt,part="header")
rst <- delete_part(rslt,part="header")
rslt <- delete_part(rslt,part="header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value")
library(autostats)
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- flextable(as.data.frame(rslt),col_keys = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- delete_part(rslt,part = "header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value", top = FALSE)
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "univariate modele",IC_univariate = "univariate modele",pval_univariate = "univariate modele",OR_multivariate = "multivariate modele",IC_multivariate = "multivariate modele",pval_multivariate = "multivariate modele", top = TRUE)
rslt
flextable(as.data.frame(rslt),col_keys = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
flextable(as.data.frame(rslt),col_keys = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt
rslt <- as.data.frame(rslt)
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- as.data.frame(rslt)
rslt
flextable(rslt, col_keys = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt
?as.data.frame
rslt <- as.data.frame(rslt[-1], row.names = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- as.data.frame(rslt[-1], col.names = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
as.data.frame(rslt[-1], colnames = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
as.data.frame(rslt[,-1], colnames = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- as.data.frame(rslt[-1,], colnames = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt
colnames(rslt) = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate")
rslt
rslt <- flextable(rslt, col_keys =  c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt
rslt <- delete_part(rslt,part = "header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value", top = FALSE)
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "univariate modele",IC_univariate = "univariate modele",pval_univariate = "univariate modele",OR_multivariate = "multivariate modele",IC_multivariate = "multivariate modele",pval_multivariate = "multivariate modele", top = TRUE)
rslt
rslt <- merge_at(rslt, i = 1:1,j=2:4)
rslt
rslt <- merge_at(rslt, i = 1:1,j=5:7)
theme_box(rslt)
theme_vader(rslt)
theme_alafoli(rslt)
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- as.data.frame(rslt[-1,])
colnames(rslt) = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate")
rslt <- flextable(rslt, col_keys =  c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- delete_part(rslt,part = "header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value", top = FALSE)
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "univariate modele",IC_univariate = "univariate modele",pval_univariate = "univariate modele",OR_multivariate = "multivariate modele",IC_multivariate = "multivariate modele",pval_multivariate = "multivariate modele", top = TRUE)
rslt <- merge_at(rslt, part = "header")
theme_alafoli(rslt)
theme_booktabs(rslt)
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- as.data.frame(rslt[-1,])
colnames(rslt) = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate")
rslt <- flextable(rslt, col_keys =  c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- delete_part(rslt,part = "header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "univariate modele",IC_univariate = "univariate modele",pval_univariate = "univariate modele",OR_multivariate = "multivariate modele",IC_multivariate = "multivariate modele",pval_multivariate = "multivariate modele", top = TRUE)
theme_booktabs(rslt)
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value", top = FALSE)
theme_booktabs(rslt)
rslt <- merge_at(rslt, part = "header")
theme_booktabs(rslt)
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- as.data.frame(rslt[-1,])
colnames(rslt) = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate")
rslt <- flextable(rslt, col_keys =  c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- delete_part(rslt,part = "header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value", top = FALSE)
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "univariate modele",IC_univariate = "univariate modele",pval_univariate = "univariate modele",OR_multivariate = "multivariate modele",IC_multivariate = "multivariate modele",pval_multivariate = "multivariate modele", top = TRUE)
rslt
merge_at(rslt, part = "header")
merge_at(rslt, part = "header",i=1:1,j=2:4)
rslt <- reglog(DF,"AA_aggravee",explicatives = c("sexe","atopie","cofacteur"),keep=c("atopie","cofacteur"))
rslt <- as.data.frame(rslt[-1,])
colnames(rslt) = c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate")
rslt <- flextable(rslt, col_keys =  c("variables","OR_univariate","IC_univariate","pval_univariate","OR_multivariate","IC_multivariate","pval_multivariate"))
rslt <- delete_part(rslt,part = "header")
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "OR",IC_univariate = "IC95%",pval_univariate = "p-value",OR_multivariate = "OR",IC_multivariate = "IC95%",pval_multivariate = "p-value", top = FALSE)
rslt <- add_header(x = rslt, variable = "variables",OR_univariate = "univariate modele",IC_univariate = "univariate modele",pval_univariate = "univariate modele",OR_multivariate = "multivariate modele",IC_multivariate = "multivariate modele",pval_multivariate = "multivariate modele", top = TRUE)
rslt <- merge_at(rslt, part = "header",i=1:1,j=2:4)
rslt <- merge_at(rslt, part = "header",i = 1:1,j=5:7)
theme_booktabs(rslt)
?rnorm
pwr.chisq.test(sig.level=0.05,power=0.80,df=3,w=0.289)
?chisq.test
library(readxl)
DF_cyrille <- read_excel("~/MEGA/ARTICLES/CDD/DF_cyrille.xlsx")
View(DF_cyrille)
DF <- read_excel("~/MEGA/ARTICLES/CDD/DF_cyrille.xlsx")
anova(DF[, c(1,2,3)])
?aov
library(autostats)
autostats::table1(DF[,c(1,2,3)])
DF$
table1::table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`)
DF$
table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`)
table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`)
table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`,data=DF)
table1::table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`,data=DF)
knitr::opts_chunk$set(echo = TRUE)
DF <- read_excel("~/MEGA/ARTICLES/CDD/DF_cyrille.xlsx")
library(autostats)
table1::table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`,data=DF)
plot(pressure)
tab <- table1::table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`,data=DF)
SUVs <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
SUVs
rep("FDG",30)
Exam <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("FDG",length(DF$`DOPA SUVmax`)),rep("FDG",length(DF$`TOC SUVmax`)))
SUVs <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
cbind(SUVs,Exam)
Exam <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("DOPA",length(DF$`DOPA SUVmax`)),rep("TOC",length(DF$`TOC SUVmax`)))
cbind(SUVs,Exam)
table1::table1(Exam~SUVs,data=newDF)
newDF <- cbind(SUVs,Exam)
table1::table1(Exam~SUVs,data=newDF)
newDF <- as.data.frame(cbind(SUVs,Exam))
table1::table1(Exam~SUVs,data=newDF)
newDF$SUVs <- as.numeric(newDF$SUVs)
table1::table1(Exam~SUVs,data=newDF)
?table1
table1::table1(~SUVs|Exam,data=newDF)
tab <- table1::table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`,data=DF)
tab
mean(DF$`FDG SUVmax`)
mean(DF$`FDG SUVmax`,na.rm = TRUE)
mean(DF$`TOC SUVmax`,na.rm = TRUE)
tab <- table1::table1(~`FDG SUVmax`+`DOPA SUVmax`+`TOC SUVmax`,data=DF)
tab
library(rstatix)
?anova_test()
anova_test(new_DF,Exam~SUVs)
anova_test(newDF,Exam~SUVs)
anova_test(newDF,SUVs~Exam)
get`-anova_table(anova_test(newDF,SUVs~Exam))
get_anova_table(anova_test(newDF,SUVs~Exam))
get_anova_table(anova_test(newDF,SUVs~Exam))
/
)
)
)
)
''
```
get_anova_table(anova_test(newDF,SUVs~Exam))
aov <- anova_test(newDF,SUVs~Exam)
anova_summary(aov)
aov
newDF %>%
group_by(Exam) %>%
get_summary_stats(SUVs)
newDF
newDF %>%
group_by(Exam) %>%
get_summary_stats(SUVs)
newDF %>%
group_by(Exam) %>%
get_summary_stats(SUVs,type="mean_sd")
SUV <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
Examen <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("DOPA",length(DF$`DOPA SUVmax`)),rep("TOC",length(DF$`TOC SUVmax`)))
newDF <- as.data.frame(cbind(SUV,Examen))
newDF$SUV <- as.numeric(newDF$SUV)
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUVs,type="mean_sd")
SUV <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
Examen <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("DOPA",length(DF$`DOPA SUVmax`)),rep("TOC",length(DF$`TOC SUVmax`)))
newDF <- as.data.frame(cbind(SUV,Examen))
newDF$SUV <- as.numeric(newDF$SUV)
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUV,type="mean_sd")
?ggboxplot
library(ggpubr)
bxp <- ggboxplot(DFnew,x="examen",y="SUVmax",add="point")
bxp <- ggboxplot(newDF,x="examen",y="SUVmax",add="point")
newDF
SUVmax <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
Examen <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("DOPA",length(DF$`DOPA SUVmax`)),rep("TOC",length(DF$`TOC SUVmax`)))
newDF <- as.data.frame(cbind(SUVmax,Examen))
newDF$SUVmax <- as.numeric(newDF$SUVmax)
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUVmax,type="mean_sd")
bxp <- ggboxplot(newDF,x="Examen",y="SUVmax",add="point")
bxp
cbind(tab,tab2)
newDF %>%
group_by(Examen) %>%
identify_outliers(SUVmax) -> tab2
cbind(tab,tab2)
tab2
newDF %>%
group_by(Examen)
newDF %>%
group_by(Examen) %>%
identify_outliers(SUVmax)
newDF %>%
group_by(Examen) %>% shapiro.test()
newDF %>%
group_by(Examen) %>% shapiro.test(SUVmax)
newDF %>%
group_by(Examen) %>% shapiro_test(SUVmax)
cbind(tab,tab2)
tab2
newDF %>%
group_by(Examen) %>% shapiro_test(SUVmax) -> tab2
cbind(tab,tab2)
newDF %>%
group_by(Examen) %>% shapiro_test(SUVmax) -> tab2
tab2
ggplot(DFnew,"SUVmax",facet.by="Examen")
ggplot(newDF,"SUVmax",facet.by="Examen")
ggqqplot(newDF,"SUVmax",facet.by="Examen")
fredman.test(SUVmax~Examen,data=newDF)
friedman.test(SUVmax~Examen,data=newDF)
friedman.test(SUVmax~Examen|sujet,data=newDF)
newDF$sujet <- c(seq(length(DF$`DOPA SUVmax`),seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`)))
newDF$sujet <- c(seq(length(DF$`DOPA SUVmax`),seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`))))
newDF$sujet
c(seq(length(DF$`DOPA SUVmax`),seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`))))
length(DF$`DOPA SUVmax`)
seq(length(DF$`DOPA SUVmax`)
seq(length(DF$`DOPA SUVmax`)
?seq
newDF$sujet <- c(seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`))))
newDF$sujet <- c(seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`)),seq(length(DF$`DOPA SUVmax`)))
friedman.test(SUVmax~Examen|sujet,data=newDF)
DF$sujet <- c(seq(length(DF$`DOPA SUVmax`))
mcnemar r
D_FDG_DOPA <- DF$`FDG SUVmax` - DF$`DOPA SUVmax`
D_FDG_DOPA
D_FDG_TOC <- DF$`FDG SUVmax` - DF$`TOC SUVmax`
D_DOPA_TOC <-  DF$`DOPA SUVmax` - DF$`TOC SUVmax`
D_FDG_TOC <- DF$`FDG SUVmax` - DF$`TOC SUVmax`
D_FDG_DOPA <- DF$`FDG SUVmax` - DF$`DOPA SUVmax`
diff <- cbind(D_FDG_DOPA,D_FDG_TOC,D_DOPA_TOC)
ggqqplot(diff)
ggqqplot(diff,D_FDG_DOPA)
ggqqplot(diff,"D_FDG_DOPA")
diff <- as.data.frame(cbind(D_FDG_DOPA,D_FDG_TOC,D_DOPA_TOC))
ggqqplot(diff,"D_FDG_DOPA")
ggqqplot(diff,c("D_FDG_DOPA","D_FDG_TOC"))
ggqqplot(diff,c("D_FDG_DOPA","D_FDG_TOC","D_DOPA_TOC"))
knitr::opts_chunk$set(echo = TRUE)
DF <- read_excel("~/MEGA/ARTICLES/CDD/DF_cyrille.xlsx")
SUVmax <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
Examen <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("DOPA",length(DF$`DOPA SUVmax`)),rep("TOC",length(DF$`TOC SUVmax`)))
newDF <- as.data.frame(cbind(SUVmax,Examen))
newDF$SUVmax <- as.numeric(newDF$SUVmax)
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUVmax,type="mean_sd") -> tab
bxp <- ggboxplot(newDF,x="Examen",y="SUVmax",add="point")
bxp
newDF %>%
group_by(Examen) %>% shapiro_test(SUVmax) -> tab2
tab2
ggqqplot(newDF,"SUVmax",facet.by="Examen")
D_FDG_DOPA <- DF$`FDG SUVmax` - DF$`DOPA SUVmax`
D_FDG_TOC <- DF$`FDG SUVmax` - DF$`TOC SUVmax`
D_DOPA_TOC <-  DF$`DOPA SUVmax` - DF$`TOC SUVmax`
diff <- as.data.frame(cbind(D_FDG_DOPA,D_FDG_TOC,D_DOPA_TOC))
ggqqplot(diff,c("D_FDG_DOPA","D_FDG_TOC","D_DOPA_TOC"))
wilcox.test(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,paired=TRUE)
wilcox.test(DF$`FDG SUVmax`,DF$`TOC SUVmax`,paired=TRUE)
wilcox.test(DF$`DOPA SUVmax`,DF$`TOC SUVmax`,paired=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggpubr)
library(rstatix)
DF <- read_excel("~/MEGA/ARTICLES/CDD/DF_cyrille.xlsx")
SUVmax <- c(DF$`FDG SUVmax`,DF$`DOPA SUVmax`,DF$`TOC SUVmax`)
Examen <- c(rep("FDG",length(DF$`FDG SUVmax`)),rep("DOPA",length(DF$`DOPA SUVmax`)),rep("TOC",length(DF$`TOC SUVmax`)))
newDF <- as.data.frame(cbind(SUVmax,Examen))
newDF$SUVmax <- as.numeric(newDF$SUVmax)
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUVmax,type="mean_sd") -> tab
tab
??github
??git
??install
??install
library(readxl)
library(tidyverse)
library(table1)
PATH = "../../"
getwd()
DF <- read_excel("../../COVID19-HUON/COHORTE COVID-19 Fichier pour stats.xlsx",na = c("NR","NA"),skip = 1)
getwd()
DF <- read_excel("../../CDD/COVID19-HUON/COHORTE COVID-19 Fichier pour stats.xlsx",na = c("NR","NA"),skip = 1)
make.names(colnames(DF)) -> colnames(DF)
install_github("TanguyPerennec/Autostats")
devtools::install_github("TanguyPerennec/Autostats")
version
version.string
version$version.string
