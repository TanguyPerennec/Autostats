library(table1)
library(readxl)
DF <- read_excel("~/MEGA/ARTICLES/CDD/COVID19-HUON/COHORTE COVID-19 Fichier pour stats.xlsx",na = c("NR","NA"))
#devtools::install_github("TanguyPerennec/autostats")
library(autostats)
DF$`durée (j)...52`
DF$`durée (j)...56`
DF$`durée (j)...60`
DF$`durée (J)...68`
DF$durée...27 <- as.numeric(DF$durée...27)
table1::table1(~`Lopinavir/ritonavir`+posologie...26+durée...27, data=DF)
DF$durée...30 <- as.numeric(DF$durée...30)
table1::table1(~`remdesivir`+posologie...29+durée...30, data=DF)
DF$durée...33 <- as.numeric(DF$durée...33)
table1::table1(~`hydroxychloroquine`+posologie...32+durée...33, data=DF)
DF$durée...36 <- as.numeric(DF$durée...36)
table1::table1(~`Chloroquine`+durée...36, data=DF) #Pas de posologie disponible
DF$durée...39 <- as.numeric(DF$durée...39)
table1::table1(~`IFN-B`+posologie...38+durée...39, data=DF)
DF$durée...42 <- as.numeric(DF$durée...42)
table1::table1(~`tocilizumab`+posologie...41+durée...42, data=DF)
DF$durée...45 <- as.numeric(DF$durée...45)
table1::table1(~`Sarilumab (KEVZARA) ou placebo`+posologie...44+durée...45, data=DF)
DF$posologie...47[DF$posologie...47 == "20mg/j"] <- "20mgx1/j"
DF$durée...48 <- as.numeric(DF$durée...48)
table1::table1(~`corticoïdes`+posologie...47+durée...48, data=DF)
DF$`ATB 1ère ligne`[DF$`ATB 1ère ligne` != "NON"] <- "OUI"
autostats::table1(DF[,c(1:14,65)],y="ATB 1ère ligne",exit="html")
DF_new <- DF[DF$`décès (OUI/NON)` == "NON",]
# Exclure les patients hospit
#ggsurvplot
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "OUI"] <- FALSE
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "NON"] <- TRUE
DF$`décès (OUI/NON)` <- as.logical(DF$`décès (OUI/NON)`)
#as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
#as.numeric(DF$`Date d\'entrée`) -> DF$`Date d\'entrée`
DF_new$`Date de sortie/décès`[DF_new$`Date de sortie/décès` == "séjour en cours"] <- NA
as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
DF_new$`Date de sortie/décès` <- as.Date(DF_new$`Date de sortie/décès`,origin = "1899-12-30",optional=TRUE)
DF_new$`Date d\'entrée` <- as.Date(DF_new$`Date d\'entrée`,optional=TRUE)
DF_new$survie <- DF_new$`Date de sortie/décès` - DF_new$`Date d\'entrée`
DF_new$survie
DF_new$sortie <- 1
DF_new[2,]
DF_new[2,"survie"] <- NA
DF_new[DF_new$survie > 200,"survie"] <-  NA
km_global <- survival::survfit(survival::Surv(DF_new$survie,sortie)~SEXE, data = DF_new)
plot(km_global)
ggsurvplot(km_global)
?coxph
coxph(survival::Surv(DF_new$survie,sortie)~SEXE, data = DF_new)
survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE, data = DF_new)
survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC, data = DF_new)
survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC+IRC, data = DF_new)
survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC+IRC, data = DF_new)$summary
survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC+IRC, data = DF_new)$summary()
summary(survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC+IRC, data = DF_new))
hist(DF$Age)
gghistogram(DF,"Age",facet.by = "admission.réanimation..OUI.NON.")
gghistogram(DF,"Age",facet.by = admission.réanimation..OUI.NON.)
gghistogram(DF,Age,facet.by = admission.réanimation..OUI.NON.)
gghistogram(DF,Age,facet.by = `admission réanimation OUI NON`)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(table1)
library(readxl)
DF <- read_excel("~/MEGA/ARTICLES/CDD/COVID19-HUON/COHORTE COVID-19 Fichier pour stats.xlsx",na = c("NR","NA"))
#devtools::install_github("TanguyPerennec/autostats")
library(autostats)
DF$`durée (j)...52`
DF$`durée (j)...56`
DF$`durée (j)...60`
DF$`durée (J)...68`
DF$durée...27 <- as.numeric(DF$durée...27)
table1::table1(~`Lopinavir/ritonavir`+posologie...26+durée...27, data=DF)
DF$durée...30 <- as.numeric(DF$durée...30)
table1::table1(~`remdesivir`+posologie...29+durée...30, data=DF)
DF$durée...33 <- as.numeric(DF$durée...33)
table1::table1(~`hydroxychloroquine`+posologie...32+durée...33, data=DF)
DF$durée...36 <- as.numeric(DF$durée...36)
table1::table1(~`Chloroquine`+durée...36, data=DF) #Pas de posologie disponible
DF$durée...39 <- as.numeric(DF$durée...39)
table1::table1(~`IFN-B`+posologie...38+durée...39, data=DF)
DF$durée...42 <- as.numeric(DF$durée...42)
table1::table1(~`tocilizumab`+posologie...41+durée...42, data=DF)
DF$durée...45 <- as.numeric(DF$durée...45)
table1::table1(~`Sarilumab (KEVZARA) ou placebo`+posologie...44+durée...45, data=DF)
DF$posologie...47[DF$posologie...47 == "20mg/j"] <- "20mgx1/j"
DF$durée...48 <- as.numeric(DF$durée...48)
table1::table1(~`corticoïdes`+posologie...47+durée...48, data=DF)
DF$`ATB 1ère ligne`[DF$`ATB 1ère ligne` != "NON"] <- "OUI"
autostats::table1(DF[,c(1:14,65)],y="ATB 1ère ligne",exit="html")
DF_new <- DF[DF$`décès (OUI/NON)` == "NON",]
# Exclure les patients hospit
#ggsurvplot
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "OUI"] <- FALSE
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "NON"] <- TRUE
DF$`décès (OUI/NON)` <- as.logical(DF$`décès (OUI/NON)`)
#as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
#as.numeric(DF$`Date d\'entrée`) -> DF$`Date d\'entrée`
DF_new$`Date de sortie/décès`[DF_new$`Date de sortie/décès` == "séjour en cours"] <- NA
as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
DF_new$`Date de sortie/décès` <- as.Date(DF_new$`Date de sortie/décès`,origin = "1899-12-30",optional=TRUE)
DF_new$`Date d\'entrée` <- as.Date(DF_new$`Date d\'entrée`,optional=TRUE)
DF_new$survie <- DF_new$`Date de sortie/décès` - DF_new$`Date d\'entrée`
DF_new$survie
DF_new$sortie <- 1
DF_new[2,]
DF_new[2,"survie"] <- NA
#DF_new[DF_new$survie > 200,"survie"] <-  NA
library(survminer)
km_global <- survival::survfit(survival::Surv(DF_new$survie,sortie)~SEXE, data = DF_new)
plot(km_global)
ggsurvplot(km_global)
summary(survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC+IRC, data = DF_new))
DF$Age_c <- cut(DF$Age, c(0,60,75,85,100))
make.names(colnames(DF)) ->colnames(DF)
addmargins(table(DF$IRA,DF$admission.réanimation..OUI.NON.))
as.data.frame(DF)->DF
colnames(DF)[6] <- "Diabete"
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","SEXE","IMC","ATCD.CV","IRC",'K.actif'),stability = FALSE)
hist(DF$Age)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,85,100))
make.names(colnames(DF)) ->colnames(DF)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
as.data.frame(DF)->DF
colnames(DF)[6] <- "Diabete"
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","IMC","ATCD.CV","IRC",'K.actif'),stability = FALSE)
hist(DF$Age)
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","IMC","ATCD.CV","IRC",'K.actif'),stability = FALSE)
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),stability = FALSE)
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
table(DF$IRA,DF$obesite)
as.data.frame(DF)->DF
DF$hydroxychloroquine[DF$hydroxychloroquine == "OUI  ou placebo ?"] <- NA
DF$HNF[DF$HNF=="héparine sodique"] <- "Héparine sodique"
DF$HNF <- as.factor(DF$HNF)
DF$HNF <- relevel(DF$HNF,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) ->colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","IMC","ATCD.CV","IRC",'K.actif',"traitement.spécifique.COVID..OUI.NON.",'HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("traitement.spécifique.COVID..OUI.NON.","IMC"),exit="html",stability = FALSE)
as.data.frame(DF)->DF
DF$hydroxychloroquine[DF$hydroxychloroquine == "OUI  ou placebo ?"] <- NA
DF$HNF[DF$HNF=="héparine sodique"] <- "Héparine sodique"
DF$HNF <- as.factor(DF$HNF)
DF$HNF <- relevel(DF$HNF,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) ->colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","IMC","ATCD.CV","IRC",'K.actif','HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("IMC"),exit="html",stability = FALSE)
as.data.frame(DF)->DF
DF$hydroxychloroquine[DF$hydroxychloroquine == "OUI  ou placebo ?"] <- NA
DF$HNF[DF$HNF=="héparine sodique"] <- "Héparine sodique"
DF$HNF <- as.factor(DF$HNF)
DF$HNF <- relevel(DF$HNF,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) ->colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","obesite","ATCD.CV","IRC",'K.actif','HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("obesite"),exit="html",stability = FALSE)
table(DF$hydroxychloroquine)
as.data.frame(DF)->DF
DF$hydroxychloroquine[DF$hydroxychloroquine == "OUI  ou placebo ?"] <- NA
DF$HNF[DF$HNF=="héparine sodique"] <- "Héparine sodique"
DF$HNF <- as.factor(DF$HNF)
DF$HNF <- relevel(DF$HNF,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) ->colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","obesite","ATCD.CV","IRC",'K.actif','HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("obesite"),exit="html",stability = FALSE)
table(DF$hydroxychloroquine)
colnames(DF)
DF$Date.de.DG.positif_cat <- cut(DF$Date.de.DG.positif,"weeks")
DF[order(DF$Date.de.DG.positif_cat),c(72,23,24,37,49,46)] -> DF_time
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(table1)
library(readxl)
DF <- read_excel("~/MEGA/ARTICLES/CDD/COVID19-HUON/COHORTE COVID-19 Fichier pour stats.xlsx",na = c("NR","NA"))
#devtools::install_github("TanguyPerennec/autostats")
library(autostats)
DF$`durée (j)...52`
DF$`durée (j)...56`
DF$`durée (j)...60`
DF$`durée (J)...68`
DF$durée...27 <- as.numeric(DF$durée...27)
table1::table1(~`Lopinavir/ritonavir`+posologie...26+durée...27, data=DF)
DF$durée...30 <- as.numeric(DF$durée...30)
table1::table1(~`remdesivir`+posologie...29+durée...30, data=DF)
DF$durée...33 <- as.numeric(DF$durée...33)
table1::table1(~`hydroxychloroquine`+posologie...32+durée...33, data=DF)
DF$durée...36 <- as.numeric(DF$durée...36)
table1::table1(~`Chloroquine`+durée...36, data=DF) #Pas de posologie disponible
DF$durée...39 <- as.numeric(DF$durée...39)
table1::table1(~`IFN-B`+posologie...38+durée...39, data=DF)
DF$durée...42 <- as.numeric(DF$durée...42)
table1::table1(~`tocilizumab`+posologie...41+durée...42, data=DF)
DF$durée...45 <- as.numeric(DF$durée...45)
table1::table1(~`Sarilumab (KEVZARA) ou placebo`+posologie...44+durée...45, data=DF)
DF$posologie...47[DF$posologie...47 == "20mg/j"] <- "20mgx1/j"
DF$durée...48 <- as.numeric(DF$durée...48)
table1::table1(~`corticoïdes`+posologie...47+durée...48, data=DF)
DF$`ATB 1ère ligne`[DF$`ATB 1ère ligne` != "NON"] <- "OUI"
autostats::table1(DF[,c(1:14,65)],y="ATB 1ère ligne",exit="html")
DF_new <- DF[DF$`décès (OUI/NON)` == "NON",]
# Exclure les patients hospit
#ggsurvplot
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "OUI"] <- FALSE
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "NON"] <- TRUE
DF$`décès (OUI/NON)` <- as.logical(DF$`décès (OUI/NON)`)
#as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
#as.numeric(DF$`Date d\'entrée`) -> DF$`Date d\'entrée`
DF_new$`Date de sortie/décès`[DF_new$`Date de sortie/décès` == "séjour en cours"] <- NA
as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
DF_new$`Date de sortie/décès` <- as.Date(DF_new$`Date de sortie/décès`,origin = "1899-12-30",optional=TRUE)
DF_new$`Date d\'entrée` <- as.Date(DF_new$`Date d\'entrée`,optional=TRUE)
DF_new$survie <- DF_new$`Date de sortie/décès` - DF_new$`Date d\'entrée`
DF_new$survie
DF_new$sortie <- 1
DF_new[2,]
DF_new[2,"survie"] <- NA
#DF_new[DF_new$survie > 200,"survie"] <-  NA
library(survminer)
km_global <- survival::survfit(survival::Surv(DF_new$survie,sortie)~SEXE, data = DF_new)
plot(km_global)
ggsurvplot(km_global)
summary(survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+IMC+IRC, data = DF_new))
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,85,100))
make.names(colnames(DF)) ->colnames(DF)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
as.data.frame(DF)->DF
colnames(DF)[6] <- "Diabete"
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
hist(DF$Age)
table(DF$IRA,DF$obesite)
#pas multivarié
as.data.frame(DF)->DF
DF$hydroxychloroquine[DF$hydroxychloroquine == "OUI  ou placebo ?"] <- NA
DF$HNF[DF$HNF=="héparine sodique"] <- "Héparine sodique"
DF$HNF <- as.factor(DF$HNF)
DF$HNF <- relevel(DF$HNF,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) ->colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","obesite","ATCD.CV","IRC",'K.actif','HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("obesite"),exit="html",stability = FALSE)
table(DF$hydroxychloroquine)
colnames(DF)
DF$Date.de.DG.positif_cat <- cut(DF$Date.de.DG.positif,"weeks")
DF[order(DF$Date.de.DG.positif_cat),c(72,23,24,37,49,46)] -> DF_time
gghistogram(DF$Age)
summary(survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+obesite+IRC, data = DF_new))
summary(survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+obesite+IRC+HNF+HBPM, data = DF_new))
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,85,100))
make.names(colnames(DF)) ->colnames(DF)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
as.data.frame(DF)->DF
colnames(DF)[6] <- "Diabete"
autostats::reglog(DF,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
gghistogram(DF$Age)
table(DF$IRA,DF$obesite)
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,80,100))
DF2 <- DF[DF$Age < 80]
DF$Age
DF$Age < 80
DF[DF$Age < 80]
DF2 <- DF[DF$Age < 80,]
make.names(colnames(DF)) ->colnames(DF)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
as.data.frame(DF)->DF
colnames(DF)[6] <- "Diabete"
as.data.frame(DF2)->DF2
colnames(DF2)[6] <- "Diabete"
make.names(colnames(DF2)) ->colnames(DF2)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
as.data.frame(DF2)->DF2
colnames(DF2)[6] <- "Diabete"
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
DF2
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(table1)
library(readxl)
DF <- read_excel("~/MEGA/ARTICLES/CDD/COVID19-HUON/COHORTE COVID-19 Fichier pour stats.xlsx",na = c("NR","NA"))
#devtools::install_github("TanguyPerennec/autostats")
library(autostats)
DF$`durée (j)...52`
DF$`durée (j)...56`
DF$`durée (j)...60`
DF$`durée (J)...68`
DF$durée...27 <- as.numeric(DF$durée...27)
table1::table1(~`Lopinavir/ritonavir`+posologie...26+durée...27, data=DF)
DF$durée...30 <- as.numeric(DF$durée...30)
table1::table1(~`remdesivir`+posologie...29+durée...30, data=DF)
DF$durée...33 <- as.numeric(DF$durée...33)
table1::table1(~`hydroxychloroquine`+posologie...32+durée...33, data=DF)
DF$durée...36 <- as.numeric(DF$durée...36)
table1::table1(~`Chloroquine`+durée...36, data=DF) #Pas de posologie disponible
DF$durée...39 <- as.numeric(DF$durée...39)
table1::table1(~`IFN-B`+posologie...38+durée...39, data=DF)
DF$durée...42 <- as.numeric(DF$durée...42)
table1::table1(~`tocilizumab`+posologie...41+durée...42, data=DF)
DF$durée...45 <- as.numeric(DF$durée...45)
table1::table1(~`Sarilumab (KEVZARA) ou placebo`+posologie...44+durée...45, data=DF)
DF$posologie...47[DF$posologie...47 == "20mg/j"] <- "20mgx1/j"
DF$durée...48 <- as.numeric(DF$durée...48)
table1::table1(~`corticoïdes`+posologie...47+durée...48, data=DF)
DF$`ATB 1ère ligne`[DF$`ATB 1ère ligne` != "NON"] <- "OUI"
autostats::table1(DF[,c(1:14,65)],y="ATB 1ère ligne",exit="html")
DF_new <- DF[DF$`décès (OUI/NON)` == "NON",]
# Exclure les patients hospit
#ggsurvplot
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "OUI"] <- FALSE
DF$`décès (OUI/NON)`[DF$`décès (OUI/NON)` == "NON"] <- TRUE
DF$`décès (OUI/NON)` <- as.logical(DF$`décès (OUI/NON)`)
#as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
#as.numeric(DF$`Date d\'entrée`) -> DF$`Date d\'entrée`
DF_new$`Date de sortie/décès`[DF_new$`Date de sortie/décès` == "séjour en cours"] <- NA
as.numeric(DF_new$`Date de sortie/décès`) -> DF_new$`Date de sortie/décès`
DF_new$`Date de sortie/décès` <- as.Date(DF_new$`Date de sortie/décès`,origin = "1899-12-30",optional=TRUE)
DF_new$`Date d\'entrée` <- as.Date(DF_new$`Date d\'entrée`,optional=TRUE)
DF_new$survie <- DF_new$`Date de sortie/décès` - DF_new$`Date d\'entrée`
DF_new$survie
DF_new$sortie <- 1
DF_new[2,]
DF_new[2,"survie"] <- NA
#DF_new[DF_new$survie > 200,"survie"] <-  NA
library(survminer)
km_global <- survival::survfit(survival::Surv(DF_new$survie,sortie)~SEXE, data = DF_new)
plot(km_global)
ggsurvplot(km_global)
summary(survival::coxph(survival::Surv(DF_new$survie,sortie)~SEXE+obesite+IRC+HNF+HBPM, data = DF_new))
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,80,100))
DF2 <- DF[DF$Age < 80,]
make.names(colnames(DF2)) ->colnames(DF2)
addmargins(table(DF$Age_c,DF$admission.réanimation..OUI.NON.))
addmargins(table(DF2$Age_c,DF2$admission.réanimation..OUI.NON.))
as.data.frame(DF2)->DF2
colnames(DF2)[6] <- "Diabete"
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
gghistogram(DF$Age)
DF2
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,80,100))
DF2 <- DF[DF$Age < 80,]
make.names(colnames(DF2)) ->colnames(DF2)
addmargins(table(DF2$Age_c,DF2$admission.réanimation..OUI.NON.))
as.data.frame(DF2)->DF2
colnames(DF2)[6] <- "Diabete"
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
DF2$Age_c
levels(DF2$Age_c)
levels(DF2$Age_c)[4]
levels(DF2$Age_c)[4] <- NULL
levels(DF2$Age_c)
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age_c","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
# exclure les > 80
DF$Age_c <- cut(DF$Age, c(0,60,75,80,100))
DF2 <- DF[DF$Age < 80,]
make.names(colnames(DF2)) ->colnames(DF2)
addmargins(table(DF2$Age_c,DF2$admission.réanimation..OUI.NON.))
as.data.frame(DF2)->DF2
colnames(DF2)[6] <- "Diabete"
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
autostats::reglog(DF2,y="admission.réanimation..OUI.NON.", explicatives = c("Age","IRA","SEXE","obesite","ATCD.CV","IRC",'K.actif'),keep=c("obesite"),stability = FALSE)
DF$HBPM
DF$HBPM <- relevel(DF$HNF,'NON')
DF$HBPM <- as.factor(DF$HBPM)
DF$HBPM <- relevel(DF$HNF,'NON')
DF$HBPM
DF$HBPM <- relevel(DF$HBPM,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) ->colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","obesite","ATCD.CV","IRC",'K.actif','HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("obesite"),exit="html",stability = FALSE)
glm(family = "binomial",data = DF,formula = deces~HNF)
#pas multivarié
as.data.frame(DF)->DF
DF$hydroxychloroquine[DF$hydroxychloroquine == "OUI  ou placebo ?"] <- NA
DF$HNF[DF$HNF=="héparine sodique"] <- "Héparine sodique"
DF$HNF <- as.factor(DF$HNF)
DF$HNF <- relevel(DF$HNF,'NON')
DF$HBPM <- as.factor(DF$HBPM)
DF$HBPM <- relevel(DF$HBPM,'NON')
colnames(DF)[22] <- "deces"
table(DF$Age_c,DF$deces)
make.names(colnames(DF)) -> colnames(DF)
autostats::reglog(DF,y="deces", explicatives = c("SEXE","obesite","ATCD.CV","IRC",'K.actif','HBPM',"HNF","hydroxychloroquine","Essai.clinique.COVID..OUI.NON."),keep = c("obesite"),exit="html",stability = FALSE)
table(DF$hydroxychloroquine)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggpubr)
library(rstatix)
library(flextable)
DF <- read_excel("~/MEGA/ARTICLES/CDD/These_cyrille/DF_cyrille.xlsx")
DF2 <- read_excel("~/MEGA/ARTICLES/CDD/These_cyrille/DF_cyrille2.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggpubr)
library(rstatix)
library(flextable)
DF <- read_excel("~/MEGA/ARTICLES/CDD/These_cyrille/DF_cyrille.xlsx")
DF2 <- read_excel("~/MEGA/ARTICLES/CDD/These_cyrille/DF_cyrille2.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggpubr)
library(rstatix)
library(flextable)
DF <- read_excel("~/MEGA/ARTICLES/CDD/These_cyrille/DF_cyrille.xlsx")
DFtop <- DF[1:164,]
SUV_DFtop <- c(DFtop$`28 FDG lésions pos`,DFtop$`28 TOC lésions pos`)
Examen <- c(rep("FDG",164),rep("TOC",164))
DFnew <- as.data.frame(cbind(SUV_DFtop,Examen))
table(DFnew$SUV_DFtop,DFnew$Examen) -> contingence
fisher.test(contingence)
DFtop <- DF[1:164,]
SUV_DFtop <- c(DFtop$`28 FDG lésions pos`,DFtop$`28 TOC lésions pos`)
Examen <- c(rep("FDG",164),rep("TOC",164))
DFnew <- as.data.frame(cbind(SUV_DFtop,Examen))
table(DFnew$SUV_DFtop,DFnew$Examen) -> contingence
fisher.test(contingence)
contingence
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(ggpubr)
library(rstatix)
library(flextable)
DF <- read_excel("~/MEGA/ARTICLES/CDD/These_cyrille/DF_cyrille.xlsx")
DFtop <- DF[1:164,]
SUV_DFtop <- c(DFtop$`28 FDG lésions pos`,DFtop$`28 TOC lésions pos`)
Examen <- c(rep("FDG",164),rep("TOC",164))
DFnew <- as.data.frame(cbind(SUV_DFtop,Examen))
table(DFnew$SUV_DFtop,DFnew$Examen) -> contingence
?mcnemar.test()
table(DFnew$SUV_DFtop,DFnew$Examen) -> contingence
mcnemar.test(DFnew$SUV_DFtop,DFnew$Examen)
mcnemar.test(contingence)
mcnemar.test(DFnew$SUV_DFtop,DFnew$Examen)
mcnemar.test(contingence)
SUV_LM <- c(DF$`FDG liver meta`,DF$`DOPA liver meta`,DF$`DOTATOC liver meta`)
Examen <- c(rep("FDG",length(DF$`FDG liver meta`)),rep("DOPA",length(DF$`DOPA liver meta`)),rep("TOC",length(DF$DF$`DOTATOC liver meta`)))
Examen <- c(rep("FDG",length(DF$`FDG liver meta`)),rep("DOPA",length(DF$`DOPA liver meta`)),rep("TOC",length(DF$DF$`DOTATOC liver meta`)))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
Examen
Examen <- c(rep("FDG",length(DF$`FDG liver meta`)),rep("DOPA",length(DF$`DOPA liver meta`)),rep("TOC",length(DF$`DOTATOC liver meta`)))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
newDF$SUV_PHEO <- as.numeric(newDF$SUV_LM)
newDF$SUV_LM <- as.numeric(newDF$SUV_LM)
SUV_LM <- c(DF$`FDG liver meta`,DF$`DOPA liver meta`,DF$`DOTATOC liver meta`)
Examen <- c(rep("FDG",length(DF$`FDG liver meta`)),rep("DOPA",length(DF$`DOPA liver meta`)),rep("TOC",length(DF$`DOTATOC liver meta`)))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
newDF$SUV_LM <- as.numeric(newDF$SUV_LM)
newDF
SUV_LM <- c(DF$`FDG liver meta`[5],DF$`DOPA liver meta`[5],DF$`DOTATOC liver meta`[5])
Examen <- c(rep("FDG",length(DF$`FDG liver meta`)),rep("DOPA",length(DF$`DOPA liver meta`)),rep("TOC",length(DF$`DOTATOC liver meta`)))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
newDF$SUV_LM <- as.numeric(newDF$SUV_LM)
newDF
DF$`FDG liver meta`
DF$`FDG liver meta`[5]
SUV_LM <- c(DF$`FDG liver meta`[1:5],DF$`DOPA liver meta`[1:5],DF$`DOTATOC liver meta`[1:5])
Examen <- c(rep("FDG",length(DF$`FDG liver meta`)),rep("DOPA",length(DF$`DOPA liver meta`)),rep("TOC",length(DF$`DOTATOC liver meta`)))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
newDF
Examen <- c(rep("FDG",5),rep("DOPA",5),rep("TOC",5)
newDF$SUV_LM <- as.numeric(newDF$SUV_LM)
SUV_LM <- c(DF$`FDG liver meta`[1:5],DF$`DOPA liver meta`[1:5],DF$`DOTATOC liver meta`[1:5])
Examen <- c(rep("FDG",5),rep("DOPA",5),rep("TOC",5))
newDF <- as.data.frame(cbind(SUV_LM,Examen))
newDF$SUV_LM <- as.numeric(newDF$SUV_LM)
newDF
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUV_PHEO,type="mean_sd") -> tab_SUVmean
newDF %>%
group_by(Examen) %>%
get_summary_stats(SUV_LM,type="mean_sd") -> tab_SUVmean
flextable(tab_SUVmean)
ggboxplot(newDF,x="Examen",y="SUV_PHEO",add="point",title = "SUV PHEO en fonction de l'examen utilisé")
ggboxplot(newDF,x="Examen",y="SUV_LM",add="point",title = "SUV PHEO en fonction de l'examen utilisé")
ggboxplot(newDF,x="Examen",y="SUV_LM",add="point",title = "SUV liver M+ en fonction de l'examen utilisé")
comparaison <- c("FDG vs DOPA","FDG vs TOC","DOPA vs TOC")
wilcoxon <- c(wilcox.test(DF$`FDG SUVmax`,DF$`DOPA SUVmax`))
wilcoxon
wilcoxon <- c(wilcox.test(DF$`FDG liver meta`[1:5],DF$`DOPA liver meta`[1:5]))
wilcoxon
wilcoxon <- c(wilcox.test(DF$`FDG liver meta`[1:5],DF$`DOPA liver meta`[1:5]))$p.value
wilcoxon
wilcoxon <- c(wilcox.test(DF$`FDG liver meta`[1:5],DF$`DOPA liver meta`[1:5])$p.value,wilcox.test(DF$`FDG liver meta`[1:5],DF$`DOTATOC liver meta`[1:5])$p.value,wilcox.test(DF$`DOPA liver meta`[1:5],DF$`DOPA liver meta`[1:5])$p.value)
wilcoxon <- signif(wilcoxon,3)
tab <- cbind(comparaison,wilcoxon)
tab <- as.data.frame(tab)
flextable(tab)
DFtop <- DF[1:41,]
patients <- c(DFtop$`28 patients FDG pos`,DFtop$`28 patients TOC pos`)
Examen <- c(rep("FDG",41),rep("TOC",41))
DFnew <- as.data.frame(cbind(patients,Examen))
table(DFnew$patients,DFnew$Examen) -> contingence
fisher.test(contingence)
mcnemar.test(contingence)
contingence
(25+3)*5/(25+5+26)
mcnemar.test(contingence)
